#!/usr/bin/env ruby
# encoding: utf-8

def resolve_reg(s)
  case s
  when 'r0'
    0
  when 'r1'
    1
  when 'r2'
    2
  when 'r3'
    3
  when 'r4'
    4
  when 'r5'
    5
  when 'r6'
    6
  when 'r7'
    7
  else
    raise "Unknown register: #{s}"
  end
end

def parse_imm(s)
  case s
  when /\A0x/
    s.to_i(16)
  else
    raise "Cannot parse immediate: #{s}"
  end
end

program = []

File.readlines(ARGV[0]).each do |line|
  instr = line.strip.split(/ +/)
  $stderr.puts(instr.inspect)

  case instr[0]
  when 'nop'
    program << 0x00
  when 'addi'
    program << 0x01
    program << resolve_reg(instr[1])
    program << parse_imm(instr[2])
  when 'mod'
    program << 0x02
    program << resolve_reg(instr[1])
    program << resolve_reg(instr[2])
  when 'mov'
    program << 0x03
    program << resolve_reg(instr[1])
    program << resolve_reg(instr[2])
  when 'jrz'
    program << 0x04
    program << resolve_reg(instr[1])
    program << parse_imm(instr[2])
  when 'movi'
    program << 0x05
    program << resolve_reg(instr[1])
    program << parse_imm(instr[2])
  when 'jrb'
    program << 0x06
    program << parse_imm(instr[1])
  when 'halt'
    program << 0x07
  when 'mod2'
    program << 0x08
    program << resolve_reg(instr[1])
    program << resolve_reg(instr[2])
    program << resolve_reg(instr[3])
  else
    raise "Unknown instruction name: #{instr[0]}"
  end
end

print program.pack('C*')
